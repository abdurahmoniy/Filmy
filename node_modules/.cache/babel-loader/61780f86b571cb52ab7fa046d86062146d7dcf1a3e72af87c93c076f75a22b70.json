{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport usePatchElement from '../../_util/hooks/usePatchElement';\nimport { withConfirm, withError, withInfo, withSuccess, withWarn } from '../confirm';\nimport HookModal from './HookModal';\nimport destroyFns from '../destroyFns';\nlet uuid = 0;\nconst ElementsHolder = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef((_props, ref) => {\n  const [elements, patchElement] = usePatchElement();\n  React.useImperativeHandle(ref, () => ({\n    patchElement\n  }), []);\n  // eslint-disable-next-line react/jsx-no-useless-fragment\n  return /*#__PURE__*/React.createElement(React.Fragment, null, elements);\n}));\nfunction useModal() {\n  const holderRef = React.useRef(null);\n  // ========================== Effect ==========================\n  const [actionQueue, setActionQueue] = React.useState([]);\n  React.useEffect(() => {\n    if (actionQueue.length) {\n      const cloneQueue = _toConsumableArray(actionQueue);\n      cloneQueue.forEach(action => {\n        action();\n      });\n      setActionQueue([]);\n    }\n  }, [actionQueue]);\n  // =========================== Hook ===========================\n  const getConfirmFunc = React.useCallback(withFunc => function hookConfirm(config) {\n    var _a;\n    uuid += 1;\n    const modalRef = /*#__PURE__*/React.createRef();\n    let closeFunc;\n    const modal = /*#__PURE__*/React.createElement(HookModal, {\n      key: `modal-${uuid}`,\n      config: withFunc(config),\n      ref: modalRef,\n      afterClose: () => {\n        closeFunc === null || closeFunc === void 0 ? void 0 : closeFunc();\n      }\n    });\n    closeFunc = (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.patchElement(modal);\n    if (closeFunc) {\n      destroyFns.push(closeFunc);\n    }\n    return {\n      destroy: () => {\n        function destroyAction() {\n          var _a;\n          (_a = modalRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        }\n        if (modalRef.current) {\n          destroyAction();\n        } else {\n          setActionQueue(prev => [].concat(_toConsumableArray(prev), [destroyAction]));\n        }\n      },\n      update: newConfig => {\n        function updateAction() {\n          var _a;\n          (_a = modalRef.current) === null || _a === void 0 ? void 0 : _a.update(newConfig);\n        }\n        if (modalRef.current) {\n          updateAction();\n        } else {\n          setActionQueue(prev => [].concat(_toConsumableArray(prev), [updateAction]));\n        }\n      }\n    };\n  }, []);\n  const fns = React.useMemo(() => ({\n    info: getConfirmFunc(withInfo),\n    success: getConfirmFunc(withSuccess),\n    error: getConfirmFunc(withError),\n    warning: getConfirmFunc(withWarn),\n    confirm: getConfirmFunc(withConfirm)\n  }), []);\n  return [fns, /*#__PURE__*/React.createElement(ElementsHolder, {\n    key: \"modal-holder\",\n    ref: holderRef\n  })];\n}\nexport default useModal;","map":{"version":3,"names":["_toConsumableArray","React","usePatchElement","withConfirm","withError","withInfo","withSuccess","withWarn","HookModal","destroyFns","uuid","ElementsHolder","memo","forwardRef","_props","ref","elements","patchElement","useImperativeHandle","createElement","Fragment","useModal","holderRef","useRef","actionQueue","setActionQueue","useState","useEffect","length","cloneQueue","forEach","action","getConfirmFunc","useCallback","withFunc","hookConfirm","config","_a","modalRef","createRef","closeFunc","modal","key","afterClose","current","push","destroy","destroyAction","prev","concat","update","newConfig","updateAction","fns","useMemo","info","success","error","warning","confirm"],"sources":["/Users/student/Desktop/Filmy/node_modules/antd/es/modal/useModal/index.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport usePatchElement from '../../_util/hooks/usePatchElement';\nimport { withConfirm, withError, withInfo, withSuccess, withWarn } from '../confirm';\nimport HookModal from './HookModal';\nimport destroyFns from '../destroyFns';\nlet uuid = 0;\nconst ElementsHolder = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef((_props, ref) => {\n  const [elements, patchElement] = usePatchElement();\n  React.useImperativeHandle(ref, () => ({\n    patchElement\n  }), []);\n  // eslint-disable-next-line react/jsx-no-useless-fragment\n  return /*#__PURE__*/React.createElement(React.Fragment, null, elements);\n}));\nfunction useModal() {\n  const holderRef = React.useRef(null);\n  // ========================== Effect ==========================\n  const [actionQueue, setActionQueue] = React.useState([]);\n  React.useEffect(() => {\n    if (actionQueue.length) {\n      const cloneQueue = _toConsumableArray(actionQueue);\n      cloneQueue.forEach(action => {\n        action();\n      });\n      setActionQueue([]);\n    }\n  }, [actionQueue]);\n  // =========================== Hook ===========================\n  const getConfirmFunc = React.useCallback(withFunc => function hookConfirm(config) {\n    var _a;\n    uuid += 1;\n    const modalRef = /*#__PURE__*/React.createRef();\n    let closeFunc;\n    const modal = /*#__PURE__*/React.createElement(HookModal, {\n      key: `modal-${uuid}`,\n      config: withFunc(config),\n      ref: modalRef,\n      afterClose: () => {\n        closeFunc === null || closeFunc === void 0 ? void 0 : closeFunc();\n      }\n    });\n    closeFunc = (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.patchElement(modal);\n    if (closeFunc) {\n      destroyFns.push(closeFunc);\n    }\n    return {\n      destroy: () => {\n        function destroyAction() {\n          var _a;\n          (_a = modalRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        }\n        if (modalRef.current) {\n          destroyAction();\n        } else {\n          setActionQueue(prev => [].concat(_toConsumableArray(prev), [destroyAction]));\n        }\n      },\n      update: newConfig => {\n        function updateAction() {\n          var _a;\n          (_a = modalRef.current) === null || _a === void 0 ? void 0 : _a.update(newConfig);\n        }\n        if (modalRef.current) {\n          updateAction();\n        } else {\n          setActionQueue(prev => [].concat(_toConsumableArray(prev), [updateAction]));\n        }\n      }\n    };\n  }, []);\n  const fns = React.useMemo(() => ({\n    info: getConfirmFunc(withInfo),\n    success: getConfirmFunc(withSuccess),\n    error: getConfirmFunc(withError),\n    warning: getConfirmFunc(withWarn),\n    confirm: getConfirmFunc(withConfirm)\n  }), []);\n  return [fns, /*#__PURE__*/React.createElement(ElementsHolder, {\n    key: \"modal-holder\",\n    ref: holderRef\n  })];\n}\nexport default useModal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}